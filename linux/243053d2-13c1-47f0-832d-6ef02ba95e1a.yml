- id: 243053d2-13c1-47f0-832d-6ef02ba95e1a
  name: Backup Sensitive Directories
  description: Create compressed backups of sensitive directories
  tactic: setup
  technique:
    attack_id: x
    name: x
  repeatable: false
  platforms:
    linux:
      sh:
        command: "mkdir -p /tmp/sensitive_file_backups;\ndir_path=$(echo \"#{directory.sensitive.path}\"\
          \ | sed 's/\\\\\\*/\\*/g');\ndirectories=$(find $dir_path -maxdepth 0 -type\
          \ d 2>/dev/null);\noutput=\"\";\nfor directory in $directories;\n  do if\
          \ [ -z \"$(ls -A $directory)\" ]; then\n    touch \"${directory}/.bak\"\
          ;\n  fi;\n  randname=$(head /dev/urandom | tr -dc A-Za-z0-9 | head -c 13);\n\
          \  tar -czf /tmp/sensitive_file_backups/${randname}.tar.gz -C $directory\
          \ .;\n  output=\"${output}${directory}>${randname}.tar.gz\\n\";\ndone;\n\
          echo $output | sed '/^[[:space:]]*$/d'\n"
        parsers:
          plugins.response.app.parsers.key_value:
          - source: directory.sensitive.path
            edge: has_backup
            target: directory.sensitive.backup
        cleanup: "rm -rf /tmp/sensitive_file_backups;\ndir_path=$(echo \"#{directory.sensitive.path}\"\
          \ | sed 's/\\\\\\*/\\*/g');\ndirectories=$(find $dir_path -maxdepth 0 -type\
          \ d 2>/dev/null);\nfor directory in $directories;\n  do rm -f \"${directory}/.bak\"\
          ;\ndone;\n"
    darwin:
      sh:
        command: "mkdir -p /tmp/sensitive_file_backups;\ndir_path=$(echo \"#{directory.sensitive.path}\"\
          \ | sed 's/\\\\\\*/\\*/g');\ndirectories=$(find $dir_path -maxdepth 0 -type\
          \ d 2>/dev/null);\noutput=\"\";\nfor directory in $directories;\n  do if\
          \ [ -z \"$(ls -A $directory)\" ]; then\n    touch \"${directory}/.bak\"\
          ;\n  fi;\n  randname=$(head /dev/urandom | LC_CTYPE=C tr -dc A-Za-z0-9 |\
          \ head -c 13);\n  tar -czf /tmp/sensitive_file_backups/${randname}.tar.gz\
          \ -C $directory .;\n  output=\"${output}${directory}>${randname}.tar.gz\\\
          n\";\ndone;\necho $output | sed '/^[[:space:]]*$/d'\n"
        parsers:
          plugins.response.app.parsers.key_value:
          - source: directory.sensitive.path
            edge: has_backup
            target: directory.sensitive.backup
        cleanup: "rm -rf /tmp/sensitive_file_backups;\ndir_path=$(echo \"#{directory.sensitive.path}\"\
          \ | sed 's/\\\\\\*/\\*/g');\ndirectories=$(find $dir_path -maxdepth 0 -type\
          \ d 2>/dev/null);\nfor directory in $directories;\n  do rm -f \"${directory}/.bak\"\
          ;\ndone;\n"
    windows:
      psh:
        command: "New-Item -ItemType Directory -Force -Path C:\\Users\\Public\\sensitive_file_backups\
          \ | Out-Null;\n$output = '';\nGet-Item #{directory.sensitive.path} -EA silentlycontinue\
          \ | Where-Object { $_ -is [System.IO.DirectoryInfo] } | foreach-object {\n\
          \  if ((Get-ChildItem $_.FullName -Force | Measure-Object).count -eq 0)\
          \ {\n    echo '' > $($_.FullName + \"\\.bak\");\n  };\n  $randname = -join\
          \ (( 0x41..0x5A) + ( 0x61..0x7A) | Get-Random -Count 13 | % {[char]$_});\n\
          \  Compress-Archive -Force -Path $($_.FullName + \"\\*\") -DestinationPath\
          \ $(\"C:\\Users\\Public\\sensitive_file_backups\\\" + $randname + \".zip\"\
          );\n  $output = \"$($output)$($_.FullName)>$($randname).zip`n\";\n};\n$output;\n"
        parsers:
          plugins.response.app.parsers.key_value:
          - source: directory.sensitive.path
            edge: has_backup
            target: directory.sensitive.backup
        cleanup: "Remove-Item -Recurse -Force C:\\Users\\Public\\sensitive_file_backups\
          \ -EA silentlycontinue;\nGet-Item #{directory.sensitive.path} -EA silentlycontinue\
          \ | Where-Object { $_ -is [System.IO.DirectoryInfo] } | foreach-object {\n\
          \  Remove-Item -Force \"$($_.FullName)\\.bak\" -EA silentlycontinue;\n}\n"
  requirements:
  - plugins.response.app.requirements.source_fact:
    - source: directory.sensitive.path
