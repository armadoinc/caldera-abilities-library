- description: "This test simulates an attack where PowerShell is used to detect connected\
    \ USB or other removable storage devices and gather a list of specific document\
    \ files \n(e.g., .docx, .xls, .txt, .pdf). The command works by first identifying\
    \ removable drives on the system and then recursively searching through each one\
    \ for files \nmatching the targeted extensions. If no removable drives are present,\
    \ the script will return a message stating that no media is detected. This behavior\
    \ mimics \nhow adversaries might scan for sensitive documents on removable devices\
    \ for exfiltration or analysis.\n"
  id: 7ba24116-fdb4-9442-5cba-b8be809a96a5
  name: Identify Documents on USB and Removable Media via PowerShell
  platforms:
    windows:
      cmd:
        cleanup: ''
        command: powershell.exe -c "Get-Volume | Where-Object {$_.DriveType -eq 'Removable'}
          | ForEach-Object { Get-ChildItem -Path ($_.DriveLetter + ':\*') -Recurse
          -Include '*.doc*','*.xls*','*.txt','*.pdf' -ErrorAction SilentlyContinue
          | ForEach-Object {Write-Output $_.FullName} } ; if (-not (Get-Volume | Where-Object
          {$_.DriveType -eq 'Removable'})) { Write-Output 'No removable media.' }"
        payloads: []
  tactic: collection
  technique:
    attack_id: T1025
    name: Data from Removable Media
